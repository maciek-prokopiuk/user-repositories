plugins {
    id 'org.springframework.boot' version '3.3.1'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'java'

    id "org.openapi.generator" version "7.0.1"
}

group = 'com.maciejprokopiuk'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'


configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2023.0.2")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    implementation 'org.springdoc:springdoc-openapi-ui:1.8.0'
    compileOnly group: 'jakarta.servlet', name: 'jakarta.servlet-api', version: '6.1.0'

    // reactor
    implementation 'io.projectreactor:reactor-core:3.6.6'

    // java
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    implementation 'com.google.code.findbugs:jsr305:3.0.2'

    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Tests
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.assertj:assertj-core'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.awaitility:awaitility:4.2.1'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'io.projectreactor:reactor-test:3.6.9'
    testImplementation 'org.springframework.cloud:spring-cloud-contract-wiremock:4.1.4'
}

tasks.named('test') {
    useJUnitPlatform()
}

sourceSets {
    main {
        java {
            srcDir 'build/generated/sources/src/main/java'
        }
    }
}

apply plugin: 'org.openapi.generator'

openApiGenerate {
    generatorName = "spring"
    inputSpec = "$rootDir/src/main/resources/api.yml"
    outputDir = "$buildDir/generated/sources"
    modelPackage = "com.maciejprokopiuk.app.core.models"
    apiPackage = "com.maciejprokopiuk.app.core.controllers"
    configOptions = [
            delegatePattern: "false",
            dateLibrary: "java8",
            interfaceOnly: "true", // This tells the generator to not create an entire Spring application. It will generate only interfaces for controllers
            serializationLibrary: "jackson",
            library: "spring-boot",
            additionalModelTypeAnnotations: "@lombok.Generated @lombok.Builder",
            openApiNullable: "false", // don't include https://github.com/OpenAPITools/jackson-databind-nullable dependency,
            useSpringBoot3: "true",
            reactive: "true",
            skipDefaultInterface: "true"

    ]
    additionalProperties = [
            useSpringfox: false
    ]
    typeMappings = [
            OffsetDateTime: 'java.time.ZonedDateTime'
    ]
    generateModelTests = true
    generateModelDocumentation = true
    generateApiTests = true
    generateApiDocumentation = true
}

tasks.register('openApiGenerateGithub', org.openapitools.generator.gradle.plugin.tasks.GenerateTask) {
    generatorName = "spring"
    inputSpec = "$rootDir/src/main/resources/ghes-3.0.yml"
    outputDir = "$buildDir/generated/sources"
    modelPackage = "com.maciejprokopiuk.github.models"
    modelNameSuffix = "Dto"
    apiPackage = "com.maciejprokopiuk.github"
    invokerPackage = "com.maciejprokopiuk.github.client.invoker"
    configOptions = [
            dateLibrary                   : "java8",
            serializationLibrary          : "jackson",
            openApiNullable               : "false", // don't include https://github.com/OpenAPITools/jackson-databind-nullable dependency,
            useSpringBoot3                : "true",
            additionalModelTypeAnnotations: "@lombok.Generated",
            interfaceOnly : "true",
            generateExamples: "false"
    ]
    additionalProperties = [
            useSpringfox: false
    ]
    typeMappings = [
            OffsetDateTime: 'java.time.ZonedDateTime'
    ]
}

tasks.compileJava.dependsOn(tasks.openApiGenerate)
tasks.openApiGenerate.dependsOn(tasks.openApiGenerateGithub)



